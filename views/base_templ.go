// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Base() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Shortr</title><style>\n        body {\n            font-family: 'Inter', sans-serif;\n            margin: 0;\n            padding: 0;\n            background-color: #121212;\n            color: #e0e0e0;\n            display: flex;\n            flex-direction: column;\n            min-height: 100vh;\n            transition: background-color 0.3s ease;\n        }\n\n        header {\n            background: linear-gradient(135deg, #6a00f4, #3a00b3);\n            color: #ffffff;\n            padding: 20px;\n            text-align: center;\n            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\n            font-size: 2em;\n            font-weight: 600;\n            letter-spacing: -0.02em;\n            position: sticky;\n            top: 0;\n            z-index: 1000;\n        }\n\n        header a {\n            color: #ffffff;\n            text-decoration: none;\n            transition: opacity 0.3s ease;\n        }\n\n        header a:hover {\n            opacity: 0.8;\n        }\n\n        .content {\n            flex: 1;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n            padding: 40px 20px;\n            background-color: #181818;\n            animation: fadeIn 0.5s ease-in-out;\n        }\n\n        @keyframes fadeIn {\n            from { opacity: 0; }\n            to { opacity: 1; }\n        }\n\n        h1 {\n            font-size: 2.5em;\n            margin-bottom: 20px;\n            letter-spacing: -0.02em;\n            color: #ffffff;\n            text-align: center;\n        }\n\n        p {\n            font-size: 1.2em;\n            margin-bottom: 30px;\n            color: #aaaaaa;\n            text-align: center;\n            max-width: 600px;\n            line-height: 1.5em;\n        }\n\n        .card {\n            background: #1e1e1e;\n            padding: 30px;\n            border-radius: 12px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n            width: 100%;\n            max-width: 600px;\n            text-align: center;\n            animation: slideUp 0.6s ease-in-out;\n        }\n\n        @keyframes slideUp {\n            from { transform: translateY(20px); opacity: 0; }\n            to { transform: translateY(0); opacity: 1; }\n        }\n\n        form {\n            display: flex;\n            flex-direction: column;\n            gap: 20px;\n            margin-top: 20px;\n        }\n\n        input {\n            padding: 15px;\n            border: none;\n            border-radius: 8px;\n            background-color: #2b2b2b;\n            color: #e0e0e0;\n            font-size: 1.1em;\n            transition: background-color 0.3s ease, transform 0.2s ease;\n        }\n\n        input:focus {\n            background-color: #333333;\n            outline: none;\n            transform: scale(1.02);\n        }\n\n        button {\n            padding: 15px;\n            background: linear-gradient(135deg, #6a00f4, #3a00b3);\n            color: #ffffff;\n            border: none;\n            border-radius: 30px;\n            font-size: 1.2em;\n            cursor: pointer;\n            transition: background 0.3s ease, transform 0.2s ease;\n        }\n\n        button:hover {\n            background: linear-gradient(135deg, #3a00b3, #6a00f4);\n            transform: scale(1.05);\n        }\n\n        footer {\n            text-align: center;\n            padding: 20px;\n            background-color: #1f1f1f;\n            color: #e0e0e0;\n            font-size: 0.9em;\n            border-top: 1px solid #333;\n            margin-top: 40px;\n        }\n\n        footer a {\n            color: #ffffff;\n            text-decoration: none;\n            transition: opacity 0.3s ease;\n        }\n\n        footer a:hover {\n            opacity: 0.7;\n        }\n\n        @media (max-width: 600px) {\n            h1 {\n                font-size: 2em;\n            }\n\n            p {\n                font-size: 1em;\n            }\n\n            button {\n                font-size: 1em;\n                padding: 12px;\n            }\n\n            .card {\n                padding: 20px;\n            }\n        }\n    </style></head><body><header><a href=\"..\">Shortr</a></header><div class=\"content\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><footer>With ❤️ by <a href=\"https://4rkal.com\">4rkal</a></footer></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
